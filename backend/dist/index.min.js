"use strict";function _slicedToArray(e,r){return _arrayWithHoles(e)||_iterableToArrayLimit(e,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,r){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var s=[],n=!0,a=!1,t=void 0;try{for(var o,i=e[Symbol.iterator]();!(n=(o=i.next()).done)&&(s.push(o.value),!r||s.length!==r);n=!0);}catch(e){a=!0,t=e}finally{try{n||null==i.return||i.return()}finally{if(a)throw t}}return s}}function _arrayWithHoles(e){if(Array.isArray(e))return e}var express=require("express"),cors=require("cors"),bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),mysql=require("mysql2"),app=express();app.use(cors()),app.use(express.json());var db=mysql.createConnection({host:"localhost",user:"root",password:"123456789",database:"projet_bda"});db.connect(function(e){e?console.error("Erreur de connexion à la base de données :",e.message):console.log("Connecté à la base de données MySQL")}),app.get("/",function(e,r){r.json({success:!0,message:"Bienvenue sur l’API"})}),app.post("/register",function(r,a){var s,t,o,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:try{s=r.body,t=s.username,o=s.email,i=s.password,db.query("Select * FROM user WHERE email_user = ?",[o],function(r,s){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(r)return e.abrupt("return",a.status(500).json({error:r.message}));e.next=2;break;case 2:if(0<s.length)return e.abrupt("return",a.status(400).json({error:"Cet email est déja utilisé"}));e.next=4;break;case 4:return e.next=6,regeneratorRuntime.awrap(bcrypt.hash(i,10));case 6:n=e.sent,db.query("INSERT INTO user (name_user,email_user,password_user,is_online,role_user) VALUES (?,?,?,?,?)",[t,o,n,0,"user"],function(e,r){if(e)return a.status(500).json({error:e.message});a.status(201).json({message:"Compte créé avec succès"})});case 8:case"end":return e.stop()}})})}catch(e){a.status(500).json({error:"Erreur lors de la création du compte"})}case 1:case"end":return e.stop()}})}),app.post("/login",function(r,a){var s,n,t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.body,n=s.email,t=s.password,n&&t){e.next=3;break}return e.abrupt("return",a.status(400).json({error:"Veuillez fournir email et mot de passe."}));case 3:db.query("SELECT * FROM user WHERE email_user = ?",[n],function(r,s){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(r)return e.abrupt("return",a.status(500).json({error:r.message}));e.next=2;break;case 2:if(0===s.length)return e.abrupt("return",a.status(401).json({error:"Email ou mot de passe incorrect"}));e.next=4;break;case 4:return n=s[0],e.next=7,regeneratorRuntime.awrap(bcrypt.compare(t,n.password_user));case 7:if(e.sent){e.next=10;break}return e.abrupt("return",a.status(401).json({error:"Email ou mot de passe incorrect"}));case 10:db.query("UPDATE user SET is_online = 1 WHERE id_user = ?",[n.id_user],function(e){if(e)return a.status(500).json({error:e.message});a.json({message:"Connexion réussie",user:{id_user:n.id_user,name_user:n.name_user,email_user:n.email_user,role_user:n.role_user}})});case 11:case"end":return e.stop()}})});case 4:case"end":return e.stop()}})}),app.get("/admin/users",function(e,s){db.query("SELECT * FROM admin_user_view ORDER BY name_user",function(e,r){if(e)return console.error("Erreur récupération utilisateurs :",e.message),s.status(500).json({error:"Erreur serveur"});s.json(r)})}),app.get("/games",function(e,s){db.query("SELECT * FROM game",function(e,r){if(e)return console.error("Erreur lors de la récupération des jeux :",e.message),s.status(500).json({erreur:"Erreur serveur"});s.json(r)})}),app.get("/game/:id",function(e,s){var r=e.params.id;db.query("\n    SELECT\n      g.id_game,\n      g.name_game,\n      g.thumbnail   AS image_url,\n      g.url         AS website,\n      g.year_game   AS release_date,\n      g.is_available,\n      g.rank_game,\n      g.total_ratings,\n      gd.description_game   AS description,\n      gd.game_publisher     AS publisher,\n      GROUP_CONCAT(DISTINCT c.type_category SEPARATOR ',') AS categories\n    FROM Game g\n    LEFT JOIN Game_details gd ON g.id_game = gd.id_game\n    LEFT JOIN have h         ON g.id_game = h.id_game\n    LEFT JOIN Category c     ON h.id_category = c.id_category\n    WHERE g.id_game = ?\n    GROUP BY\n      g.id_game,\n      gd.description_game,\n      gd.game_publisher\n  ",[r],function(e,r){return e?(console.error("Erreur chargement jeu:",e.message),s.status(500).json({error:e.message})):0===r.length?s.status(404).json({error:"Jeu non trouvé"}):void s.json(r[0])})}),app.get("/sessions/game/:id",function(e,a){console.log("Hehe");var r=e.params.id;db.query("\n    SELECT \n      s.id_session,\n      s.id_game,\n      s.id_host,\n      s.min_players,\n      s.max_players,\n      s.playing_time,\n      s.min_playtime,\n      s.max_playtime,\n      s.min_age,\n      s.starting_date,\n      u_host.name_user AS host_name,\n      u_part.id_user AS participant_id,\n      u_part.name_user AS participant_name,\n      u_part.trust_score AS participant_score\n    FROM Session s\n    JOIN User u_host ON s.id_host = u_host.id_user\n    LEFT JOIN participate p ON s.id_session = p.id_session\n    LEFT JOIN User u_part ON p.id_user = u_part.id_user\n    WHERE s.id_game = ?\n    ORDER BY s.id_session;\n  ",[r],function(e,r){if(e)return console.error("Erreur lors de la récupération des sessions :",e.message),a.status(500).json({error:"Erreur serveur"});var s=new Map;r.forEach(function(e){s.has(e.id_session)||(console.log("Host Name : ",e.host_name),s.set(e.id_session,{id_session:e.id_session,id_game:e.id_game,id_host:e.id_host,host_name:e.host_name,min_players:e.min_players,max_players:e.max_players,playing_time:e.playing_time,min_playtime:e.min_playtime,max_playtime:e.max_playtime,min_age:e.min_age,starting_date:e.starting_date,participants:[]})),e.participant_id&&s.get(e.id_session).participants.push({id_user:e.participant_id,name_user:e.participant_name,trust_score:e.participant_score})});var n=Array.from(s.values());a.json(n)})}),app.post("/sessions/join",function(e,s){var r=e.body,n=r.id_session,a=r.id_user;if(!n||!a)return s.status(400).json({error:"id_session et id_user sont requis"});db.query("CALL ajouter_participant(?, ?)",[n,a],function(e,r){if(e)return console.error("Erreur lors de l’ajout du participant :",e.message),s.status(500).json({error:e.message});s.json({message:"Participant ajouté avec succès"})})}),app.post("/sessions/leave",function(e,s){var r=e.body,n=r.id_session,a=r.id_user;if(!n||!a)return s.status(400).json({error:"id_session et id_user requis"});db.query("DELETE FROM participate WHERE id_session = ? AND id_user = ?",[n,a],function(e,r){return e?(console.error("leave error:",e.message),s.status(500).json({error:e.message})):0===r.affectedRows?s.status(404).json({error:"Participation non trouvée"}):void s.json({message:"Départ de session réussi"})})}),app.post("/sessions/create",function(e,s){var r=e.body,n=r.min_joueurs,a=r.max_joueurs,t=r.temps_jeu,o=r.min_duree,i=r.max_duree,u=r.age_min,c=r.jeu_id,m=r.date_debut,p=r.id_host;if(!p||!c||!m)return s.status(400).json({error:"Champs obligatoires manquants"});var _=[n,a,t,o,i,u,c,m,p];db.query("CALL creer_session(?, ?, ?, ?, ?, ?, ?, ?, ?)",_,function(e,r){if(e)return console.error("Erreur création session :",e.message),s.status(500).json({error:"Erreur lors de la création de la session"});s.json({message:"Session créée avec succès"})})}),app.put("/games/:id",function(e,s){var r=e.params.id,n=e.body,a=n.name_game,t=n.year_game,o=n.thumbnail,i=n.url;t="".concat(t,"-01-02"),console.log(t);db.query("\n    UPDATE game\n    SET name_game = ?, year_game = ?, thumbnail = ?, url = ?\n    WHERE id_game = ?\n  ",[a,t,o,i,r],function(e,r){return e?(console.error("Erreur modification jeu :",e.message),s.status(500).json({error:"Erreur serveur"})):0===r.affectedRows?s.status(404).json({error:"Jeu non trouvé"}):void s.json({message:"Jeu modifié avec succès"})})}),app.get("/api/games",function(e,s){var r=e.query.q||"",n=r?"SELECT id_game AS id, name_game AS name, year_game, thumbnail FROM Game WHERE name_game LIKE ?":"SELECT id_game AS id, name_game AS name, year_game, thumbnail FROM Game",a=r?["%".concat(r,"%")]:[];db.query(n,a,function(e,r){e?s.status(500).json({error:e}):s.json(r)})}),app.get("/api/search",function(r,s){var n,a,t,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.query.q||"",e.next=3,regeneratorRuntime.awrap(db.execute("CALL search_games(?)",[n]));case 3:a=e.sent,t=_slicedToArray(a,1),o=t[0],s.json(o[0]);case 7:case"end":return e.stop()}})}),app.get("/categories",function(e,s){db.query("SELECT * FROM Category ORDER BY type_category",function(e,r){if(e)return console.error("Erreur récupération catégories :",e.message),s.status(500).json({error:"Erreur serveur"});s.json(r)})}),app.get("/games/category/:id_category",function(e,s){var r=e.params.id_category;db.query("\n    SELECT g.*\n    FROM Game g\n    JOIN have h ON g.id_game = h.id_game\n    WHERE h.id_category = ?\n  ",[r],function(e,r){if(e)return console.error("Erreur récupération jeux catégorie :",e.message),s.status(500).json({error:"Erreur serveur"});s.json(r)})}),app.get("/user",function(e,s){db.query("SELECT * FROM user",function(e,r){if(e)return s.status(500).json({erreur:e.message});s.json(r)})}),app.listen(3e3,function(){console.log("API en ligne sur http://localhost:3000")});
//# sourceMappingURL=index.min.js.map
